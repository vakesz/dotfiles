#!/usr/bin/env bash
# ----------------------------------------------------------------------------
# setup-dotfiles.sh (enhanced)
#
# Bootstraps macOS, Linux or WSL2 with Homebrew, Brewfile bundles,
# installs required packages, casks & fonts, links dotfiles,
# and applies system tweaks idempotently.
# ----------------------------------------------------------------------------
set -Eeuo pipefail
IFS=$'\n\t'

# Logging
readonly RED="\033[0;31m"
readonly GREEN="\033[0;32m"
readonly YELLOW="\033[0;33m"
readonly NC="\033[0m"

log()   { printf "%b[%s] %s%b\n" "${GREEN}" "$(date +'%F %T')" "$1" "${NC}"; }
warn()  { printf "%b[%s] WARNING: %s%b\n" "${YELLOW}" "$(date +'%F %T')" "$1" "${NC}"; }
error() { printf "%b[%s] ERROR: %s%b\n" "${RED}" "$(date +'%F %T')" "$1" "${NC}"; exit 1; }
trap 'error "Script aborted at line $LINENO"' ERR INT

# Detect platform
case "$(uname -s)" in
  Darwin*)  log "macOS Detected..."; HOMEBREW_PREFIX="/opt/homebrew" ;;
  Linux*)   log "Linux Detected..."; HOMEBREW_PREFIX="/home/linuxbrew/.linuxbrew" ;; 
  *)        error "Unsupported OS" ;; 
esac

# Repo and defaults
REPO_ROOT=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)
DOTFILES_DIR=${DOTFILES_DIR:-"$REPO_ROOT"}
BREWFILE_PATH="$DOTFILES_DIR/Brewfile"

# Link helper
link_dot() {
  local src=$1 dest=$2
  mkdir -p "$(dirname "$dest")"
  ln -sfn "$src" "$dest"
  log "Linked: $dest"
}

# Install Homebrew if missing
install_brew() {
  if ! command -v brew &>/dev/null; then
    log "Installing Homebrew..."
    export NONINTERACTIVE=1
    curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh | bash \
      >/dev/null 2>&1
    # add to PATH
    eval "$(${HOMEBREW_PREFIX}/bin/brew shellenv)"
  else
    log "Homebrew present: $(brew --version | head -1)"
  fi
}

# Use Brewfile for bulk installs
bundle_install() {
  if [[ -f "$BREWFILE_PATH" ]]; then
    log "Running brew bundle from $BREWFILE_PATH..."
    brew bundle install
  else
    warn "No Brewfile found, skipping bundle"
  fi
}

# Final tweaks
finalize() {
  # Change Shell
  local zsh_path; zsh_path=$(command -v zsh)
  if [[ "$SHELL" != "$zsh_path" ]]; then
    # Add zsh to /etc/shells if not already present
    if ! grep -Fxq "$zsh_path" /etc/shells 2>/dev/null; then
      echo "$zsh_path" | sudo tee -a /etc/shells >/dev/null
      log "Added $zsh_path to /etc/shells"
    fi
    chsh -s "$zsh_path" || warn "Failed to change default shell"
    log "Default shell set to zsh"
  fi

  # WSL2 locale
  if grep -qi microsoft /proc/version 2>/dev/null; then
    log "Configuring WSL2 locale..."
    if ! locale -a | grep -q "en_US.UTF-8"; then
      sudo sed -i.bak -E 's/^#(en_US.UTF-8 UTF-8)/\1/' /etc/locale.gen
      sudo locale-gen
    fi
    sudo tee /etc/default/locale >/dev/null <<<'LANG=en_US.UTF-8'
  fi
}

# Main
main() {
  # Dotfiles
  link_dot "$DOTFILES_DIR/git/.gitconfig"   "$HOME/.gitconfig"
  link_dot "$DOTFILES_DIR/zsh/.zshrc"       "$HOME/.zshrc"
  link_dot "$DOTFILES_DIR/zsh/.p10k.zsh"    "$HOME/.config/.p10k.zsh"
  link_dot "$DOTFILES_DIR/nvim"             "$HOME/.config/nvim"

  # Install Homebrew and packages
  install_brew
  bundle_install

  # Finalize setup
  finalize
  log "Setup complete! Restart your shell."
}

main "$@"
